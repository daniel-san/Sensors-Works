Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/5.2.0/avr4/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/crtatmega8.o (exit)
/usr/lib/gcc/avr/5.2.0/avr4/libgcc.a(_copy_data.o)
                              test_uart.o (__do_copy_data)
/usr/lib/gcc/avr/5.2.0/avr4/libgcc.a(_clear_bss.o)
                              uart.o (__do_clear_bss)
/usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/libc.a(itoa_ncheck.o)
                              test_uart.o (__itoa_ncheck)
/usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/libc.a(utoa_ncheck.o)
                              /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/libc.a(itoa_ncheck.o) (__utoa_common)
/usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/libc.a(strrev.o)
                              /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/libc.a(utoa_ncheck.o) (strrev)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/crtatmega8.o
LOAD /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/libm.a
LOAD test_uart.o
LOAD uart.o
START GROUP
LOAD /usr/lib/gcc/avr/5.2.0/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/libm.a
LOAD /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/libc.a
LOAD /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/libatmega8.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x2e4
 *(.vectors)
 .vectors       0x0000000000000000       0x26 /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/crtatmega8.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000000026                . = ALIGN (0x2)
                0x0000000000000026                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000026        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000026                __trampolines_end = .
 *(.progmem*)
 .progmem.data  0x0000000000000026       0x58 test_uart.o
                0x000000000000007e                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000000000007e                __ctors_start = .
 *(.ctors)
                0x000000000000007e                __ctors_end = .
                0x000000000000007e                __dtors_start = .
 *(.dtors)
                0x000000000000007e                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000000000007e        0x0 /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/crtatmega8.o
                0x000000000000007e                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000000000007e        0xc /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/crtatmega8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000000000008a       0x16 /usr/lib/gcc/avr/5.2.0/avr4/libgcc.a(_copy_data.o)
                0x000000000000008a                __do_copy_data
 .init4         0x00000000000000a0       0x10 /usr/lib/gcc/avr/5.2.0/avr4/libgcc.a(_clear_bss.o)
                0x00000000000000a0                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000000000000b0        0x4 /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/crtatmega8.o
 *(.init9)
 *(.text)
 .text          0x00000000000000b4        0x2 /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/crtatmega8.o
                0x00000000000000b4                __vector_1
                0x00000000000000b4                __bad_interrupt
                0x00000000000000b4                __vector_6
                0x00000000000000b4                __vector_3
                0x00000000000000b4                __vector_13
                0x00000000000000b4                __vector_17
                0x00000000000000b4                __vector_7
                0x00000000000000b4                __vector_5
                0x00000000000000b4                __vector_4
                0x00000000000000b4                __vector_9
                0x00000000000000b4                __vector_2
                0x00000000000000b4                __vector_15
                0x00000000000000b4                __vector_8
                0x00000000000000b4                __vector_14
                0x00000000000000b4                __vector_10
                0x00000000000000b4                __vector_16
                0x00000000000000b4                __vector_18
 .text          0x00000000000000b6        0x0 test_uart.o
 .text          0x00000000000000b6      0x15a uart.o
                0x00000000000000b6                __vector_11
                0x000000000000010e                __vector_12
                0x0000000000000158                uart_init
                0x0000000000000180                uart_getc
                0x00000000000001bc                uart_putc
                0x00000000000001de                uart_puts
                0x00000000000001f4                uart_puts_p
 .text          0x0000000000000210        0x0 /usr/lib/gcc/avr/5.2.0/avr4/libgcc.a(_exit.o)
 .text          0x0000000000000210        0x0 /usr/lib/gcc/avr/5.2.0/avr4/libgcc.a(_copy_data.o)
 .text          0x0000000000000210        0x0 /usr/lib/gcc/avr/5.2.0/avr4/libgcc.a(_clear_bss.o)
 .text          0x0000000000000210        0x0 /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/libc.a(itoa_ncheck.o)
 .text          0x0000000000000210        0x0 /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/libc.a(utoa_ncheck.o)
 .text          0x0000000000000210        0x0 /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/libc.a(strrev.o)
                0x0000000000000210                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x0000000000000210       0x6a test_uart.o
                0x0000000000000210                main
 .text.libgcc.mul
                0x000000000000027a        0x0 /usr/lib/gcc/avr/5.2.0/avr4/libgcc.a(_exit.o)
 .text.libgcc.div
                0x000000000000027a        0x0 /usr/lib/gcc/avr/5.2.0/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x000000000000027a        0x0 /usr/lib/gcc/avr/5.2.0/avr4/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x000000000000027a        0x0 /usr/lib/gcc/avr/5.2.0/avr4/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x000000000000027a        0x0 /usr/lib/gcc/avr/5.2.0/avr4/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x000000000000027a        0x0 /usr/lib/gcc/avr/5.2.0/avr4/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x000000000000027a        0x0 /usr/lib/gcc/avr/5.2.0/avr4/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x000000000000027a        0x0 /usr/lib/gcc/avr/5.2.0/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x000000000000027a        0x0 /usr/lib/gcc/avr/5.2.0/avr4/libgcc.a(_copy_data.o)
 .text.libgcc   0x000000000000027a        0x0 /usr/lib/gcc/avr/5.2.0/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x000000000000027a        0x0 /usr/lib/gcc/avr/5.2.0/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x000000000000027a        0x0 /usr/lib/gcc/avr/5.2.0/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x000000000000027a        0x0 /usr/lib/gcc/avr/5.2.0/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x000000000000027a        0x0 /usr/lib/gcc/avr/5.2.0/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x000000000000027a        0x0 /usr/lib/gcc/avr/5.2.0/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x000000000000027a        0x0 /usr/lib/gcc/avr/5.2.0/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc   0x000000000000027a        0x0 /usr/lib/gcc/avr/5.2.0/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x000000000000027a        0x0 /usr/lib/gcc/avr/5.2.0/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x000000000000027a        0x0 /usr/lib/gcc/avr/5.2.0/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x000000000000027a        0x0 /usr/lib/gcc/avr/5.2.0/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x000000000000027a        0x0 /usr/lib/gcc/avr/5.2.0/avr4/libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x000000000000027a       0x14 /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/libc.a(itoa_ncheck.o)
                0x000000000000027a                __itoa_ncheck
 .text.avr-libc
                0x000000000000028e       0x32 /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/libc.a(utoa_ncheck.o)
                0x000000000000028e                __utoa_ncheck
                0x0000000000000290                __utoa_common
 .text.avr-libc
                0x00000000000002c0       0x20 /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/libc.a(strrev.o)
                0x00000000000002c0                strrev
                0x00000000000002e0                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000002e0        0x0 /usr/lib/gcc/avr/5.2.0/avr4/libgcc.a(_exit.o)
                0x00000000000002e0                exit
                0x00000000000002e0                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000002e0        0x4 /usr/lib/gcc/avr/5.2.0/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000002e4                _etext = .

.data           0x0000000000800060       0x18 load address 0x00000000000002e4
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/crtatmega8.o
 .data          0x0000000000800060        0x0 test_uart.o
 .data          0x0000000000800060        0x0 uart.o
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/5.2.0/avr4/libgcc.a(_exit.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/5.2.0/avr4/libgcc.a(_copy_data.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/5.2.0/avr4/libgcc.a(_clear_bss.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/libc.a(itoa_ncheck.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/libc.a(utoa_ncheck.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/libc.a(strrev.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 .rodata.str1.1
                0x0000000000800060       0x17 test_uart.o
 *(.gnu.linkonce.d*)
                0x0000000000800078                . = ALIGN (0x2)
 *fill*         0x0000000000800077        0x1 
                0x0000000000800078                _edata = .
                0x0000000000800078                PROVIDE (__data_end, .)

.bss            0x0000000000800078       0x45
                0x0000000000800078                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800078        0x0 /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/crtatmega8.o
 .bss           0x0000000000800078        0x0 test_uart.o
 .bss           0x0000000000800078       0x45 uart.o
 .bss           0x00000000008000bd        0x0 /usr/lib/gcc/avr/5.2.0/avr4/libgcc.a(_exit.o)
 .bss           0x00000000008000bd        0x0 /usr/lib/gcc/avr/5.2.0/avr4/libgcc.a(_copy_data.o)
 .bss           0x00000000008000bd        0x0 /usr/lib/gcc/avr/5.2.0/avr4/libgcc.a(_clear_bss.o)
 .bss           0x00000000008000bd        0x0 /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/libc.a(itoa_ncheck.o)
 .bss           0x00000000008000bd        0x0 /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/libc.a(utoa_ncheck.o)
 .bss           0x00000000008000bd        0x0 /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/libc.a(strrev.o)
 *(.bss*)
 *(COMMON)
                0x00000000008000bd                PROVIDE (__bss_end, .)
                0x00000000000002e4                __data_load_start = LOADADDR (.data)
                0x00000000000002fc                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00000000008000bd        0x0
                [!provide]                        PROVIDE (__noinit_start, .)
 *(.noinit*)
                [!provide]                        PROVIDE (__noinit_end, .)
                0x00000000008000bd                _end = .
                [!provide]                        PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 test_uart.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 uart.o

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/crtatmega8.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000       0x40
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x20 test_uart.o
 .debug_aranges
                0x0000000000000020       0x20 uart.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0xa47
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x48c /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/crtatmega8.o
 .debug_info    0x000000000000048c      0x2b1 test_uart.o
 .debug_info    0x000000000000073d      0x30a uart.o

.debug_abbrev   0x0000000000000000      0x6e8
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x44e /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/crtatmega8.o
 .debug_abbrev  0x000000000000044e      0x17a test_uart.o
 .debug_abbrev  0x00000000000005c8      0x120 uart.o

.debug_line     0x0000000000000000      0x140
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x1d /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/crtatmega8.o
 .debug_line    0x000000000000001d       0x84 test_uart.o
 .debug_line    0x00000000000000a1       0x9f uart.o

.debug_frame    0x0000000000000000      0x124
 *(.debug_frame)
 .debug_frame   0x0000000000000000       0x38 test_uart.o
 .debug_frame   0x0000000000000038       0xec uart.o

.debug_str      0x0000000000000000      0x3b9
 *(.debug_str)
 .debug_str     0x0000000000000000      0x17d /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/crtatmega8.o
 .debug_str     0x000000000000017d      0x176 test_uart.o
                                        0x1b4 (size before relaxing)
 .debug_str     0x00000000000002f3       0xc6 uart.o
                                        0x241 (size before relaxing)

.debug_loc      0x0000000000000000      0x346
 *(.debug_loc)
 .debug_loc     0x0000000000000000       0x47 test_uart.o
 .debug_loc     0x0000000000000047      0x2ff uart.o

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x0000000000000000       0x10
 *(.debug_ranges)
 .debug_ranges  0x0000000000000000       0x10 test_uart.o

.debug_macro
 *(.debug_macro)
OUTPUT(test_uart.elf elf32-avr)
LOAD linker stubs

Cross Reference Table

Symbol                                            File
__bad_interrupt                                   /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/crtatmega8.o
__bss_end                                         /usr/lib/gcc/avr/5.2.0/avr4/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/lib/gcc/avr/5.2.0/avr4/libgcc.a(_clear_bss.o)
__data_end                                        /usr/lib/gcc/avr/5.2.0/avr4/libgcc.a(_copy_data.o)
__data_load_start                                 /usr/lib/gcc/avr/5.2.0/avr4/libgcc.a(_copy_data.o)
__data_start                                      /usr/lib/gcc/avr/5.2.0/avr4/libgcc.a(_copy_data.o)
__do_clear_bss                                    /usr/lib/gcc/avr/5.2.0/avr4/libgcc.a(_clear_bss.o)
                                                  uart.o
__do_copy_data                                    /usr/lib/gcc/avr/5.2.0/avr4/libgcc.a(_copy_data.o)
                                                  test_uart.o
__heap_end                                        /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/crtatmega8.o
__init                                            /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/crtatmega8.o
__itoa_ncheck                                     /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/libc.a(itoa_ncheck.o)
                                                  test_uart.o
__stack                                           /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/crtatmega8.o
__utoa_common                                     /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/libc.a(utoa_ncheck.o)
                                                  /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/libc.a(itoa_ncheck.o)
__utoa_ncheck                                     /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/libc.a(utoa_ncheck.o)
__vector_1                                        /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/crtatmega8.o
__vector_10                                       /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/crtatmega8.o
__vector_11                                       uart.o
                                                  /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/crtatmega8.o
__vector_12                                       uart.o
                                                  /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/crtatmega8.o
__vector_13                                       /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/crtatmega8.o
__vector_14                                       /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/crtatmega8.o
__vector_15                                       /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/crtatmega8.o
__vector_16                                       /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/crtatmega8.o
__vector_17                                       /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/crtatmega8.o
__vector_18                                       /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/crtatmega8.o
__vector_2                                        /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/crtatmega8.o
__vector_3                                        /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/crtatmega8.o
__vector_4                                        /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/crtatmega8.o
__vector_5                                        /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/crtatmega8.o
__vector_6                                        /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/crtatmega8.o
__vector_7                                        /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/crtatmega8.o
__vector_8                                        /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/crtatmega8.o
__vector_9                                        /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/crtatmega8.o
__vector_default                                  /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/crtatmega8.o
__vectors                                         /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/crtatmega8.o
_exit                                             /usr/lib/gcc/avr/5.2.0/avr4/libgcc.a(_exit.o)
exit                                              /usr/lib/gcc/avr/5.2.0/avr4/libgcc.a(_exit.o)
                                                  /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/crtatmega8.o
main                                              test_uart.o
                                                  /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/crtatmega8.o
strrev                                            /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/libc.a(strrev.o)
                                                  /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr4/libc.a(utoa_ncheck.o)
uart_getc                                         uart.o
                                                  test_uart.o
uart_init                                         uart.o
                                                  test_uart.o
uart_putc                                         uart.o
                                                  test_uart.o
uart_puts                                         uart.o
                                                  test_uart.o
uart_puts_p                                       uart.o
                                                  test_uart.o
